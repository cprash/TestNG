<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="12" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-08T02:03:58 IST" name="Surefire suite" finished-at="2024-03-08T02:03:58 IST" duration-ms="76">
    <groups>
      <group name="parameterized">
        <method signature="AdditionTests.paramAddTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" name="paramAddTest" class="org.testng.hometasks.AdditionTests"/>
        <method signature="AdvancedTests.paramCubeTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramCubeTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramSquareRootTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramSquareRootTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramSquareTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramSquareTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="DivisionTests.paramDivisionTest(java.lang.String)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="paramDivisionTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="MultiplicationTests.paramMulitplyTest(java.lang.String)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" name="paramMulitplyTest" class="org.testng.hometasks.MultiplicationTests"/>
        <method signature="SubtractionTests.paramSubtractTest(java.lang.String)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" name="paramSubtractTest" class="org.testng.hometasks.SubtractionTests"/>
      </group> <!-- parameterized -->
      <group name="arithmetic">
        <method signature="AdditionTests.addTest(int,int)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" name="addTest" class="org.testng.hometasks.AdditionTests"/>
        <method signature="AdditionTests.paramAddTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" name="paramAddTest" class="org.testng.hometasks.AdditionTests"/>
        <method signature="AdvancedTests.cubeTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="cubeTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramCubeTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramCubeTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramSquareRootTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramSquareRootTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramSquareTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramSquareTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.squareRootTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="squareRootTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.squareTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="squareTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="DivisionTests.divideByZeroTest()[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="divideByZeroTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="DivisionTests.divisionTest(int,int)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="divisionTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="DivisionTests.paramDivisionTest(java.lang.String)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="paramDivisionTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="MultiplicationTests.multiplyTest(int,int)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" name="multiplyTest" class="org.testng.hometasks.MultiplicationTests"/>
        <method signature="MultiplicationTests.paramMulitplyTest(java.lang.String)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" name="paramMulitplyTest" class="org.testng.hometasks.MultiplicationTests"/>
        <method signature="SubtractionTests.paramSubtractTest(java.lang.String)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" name="paramSubtractTest" class="org.testng.hometasks.SubtractionTests"/>
        <method signature="SubtractionTests.subtractTest(int,int)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" name="subtractTest" class="org.testng.hometasks.SubtractionTests"/>
      </group> <!-- arithmetic -->
      <group name="advanceArthimetic">
        <method signature="AdvancedTests.cubeTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="cubeTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramCubeTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramCubeTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramSquareRootTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramSquareRootTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.paramSquareTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="paramSquareTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.squareRootTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="squareRootTest" class="org.testng.hometasks.AdvancedTests"/>
        <method signature="AdvancedTests.squareTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" name="squareTest" class="org.testng.hometasks.AdvancedTests"/>
      </group> <!-- advanceArthimetic -->
      <group name="basicArithmetic">
        <method signature="AdditionTests.addTest(int,int)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" name="addTest" class="org.testng.hometasks.AdditionTests"/>
        <method signature="AdditionTests.paramAddTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" name="paramAddTest" class="org.testng.hometasks.AdditionTests"/>
        <method signature="DivisionTests.divideByZeroTest()[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="divideByZeroTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="DivisionTests.divisionTest(int,int)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="divisionTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="DivisionTests.paramDivisionTest(java.lang.String)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" name="paramDivisionTest" class="org.testng.hometasks.DivisionTests"/>
        <method signature="MultiplicationTests.multiplyTest(int,int)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" name="multiplyTest" class="org.testng.hometasks.MultiplicationTests"/>
        <method signature="MultiplicationTests.paramMulitplyTest(java.lang.String)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" name="paramMulitplyTest" class="org.testng.hometasks.MultiplicationTests"/>
        <method signature="SubtractionTests.paramSubtractTest(java.lang.String)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" name="paramSubtractTest" class="org.testng.hometasks.SubtractionTests"/>
        <method signature="SubtractionTests.subtractTest(int,int)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" name="subtractTest" class="org.testng.hometasks.SubtractionTests"/>
      </group> <!-- basicArithmetic -->
    </groups>
    <test started-at="2024-03-08T02:03:58 IST" name="Surefire test" finished-at="2024-03-08T02:03:58 IST" duration-ms="76">
      <class name="org.testng.hometasks.SubtractionTests">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="beforeClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="paramSubtractTest(java.lang.String)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="paramSubtractTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'numbers' is required by @Test on method paramSubtractTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'numbers' is required by @Test on method paramSubtractTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramSubtractTest -->
        <test-method signature="subtractTest(int,int)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="subtractTest" data-provider="subtractNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtractTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.SubtractionTests.subtractTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.SubtractionTests.subtractTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="subtractTest(int,int)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="subtractTest" data-provider="subtractNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtractTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.SubtractionTests.subtractTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="afterClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.SubtractionTests@3b0090a4]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.SubtractionTests.subtractTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.testng.hometasks.SubtractionTests -->
      <class name="org.testng.hometasks.AdditionTests">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="beforeClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdditionTests.addTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="addTest(int,int)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="addTest" data-provider="addNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest -->
        <test-method signature="paramAddTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="paramAddTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'numbers' is required by @Test on method paramAddTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'numbers' is required by @Test on method paramAddTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramAddTest -->
        <test-method signature="addTest(int,int)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="addTest" data-provider="addNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdditionTests.addTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdditionTests.addTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdditionTests.addTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.testng.hometasks.AdditionTests@6743e411]" started-at="2024-03-08T02:03:58 IST" name="afterClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.testng.hometasks.AdditionTests -->
      <class name="org.testng.hometasks.MultiplicationTests">
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.MultiplicationTests.multiplyTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.MultiplicationTests.multiplyTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="multiplyTest(int,int)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="multiplyTest" data-provider="multiplyNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="beforeClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.MultiplicationTests.multiplyTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="afterClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="paramMulitplyTest(java.lang.String)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="paramMulitplyTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'numbers' is required by @Test on method paramMulitplyTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'numbers' is required by @Test on method paramMulitplyTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramMulitplyTest -->
        <test-method signature="multiplyTest(int,int)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="multiplyTest" data-provider="multiplyNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.MultiplicationTests@179ece50]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.MultiplicationTests.multiplyTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.testng.hometasks.MultiplicationTests -->
      <class name="org.testng.hometasks.DivisionTests">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="beforeClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="divideByZeroTest()[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="divideByZeroTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:38)
at org.testng.hometasks.DivisionTests.divideByZeroTest(DivisionTests.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideByZeroTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.DivisionTests.divideByZeroTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.DivisionTests.divideByZeroTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.DivisionTests.divisionTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="divisionTest(int,int)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="divisionTest" data-provider="divisionNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.DivisionTests.divisionTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.DivisionTests.divisionTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="divisionTest(int,int)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="divisionTest" data-provider="divisionNumbers" finished-at="2024-03-08T02:03:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionTest -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.DivisionTests.divisionTest(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="afterClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="paramDivisionTest(java.lang.String)[pri:0, instance:org.testng.hometasks.DivisionTests@9d5509a]" started-at="2024-03-08T02:03:58 IST" name="paramDivisionTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'numbers' is required by @Test on method paramDivisionTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'numbers' is required by @Test on method paramDivisionTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramDivisionTest -->
      </class> <!-- org.testng.hometasks.DivisionTests -->
      <class name="org.testng.hometasks.AdvancedTests">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdvancedTests.squareRootTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdvancedTests.cubeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="paramSquareTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="paramSquareTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'singleNumber' is required by @Test on method paramSquareTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'singleNumber' is required by @Test on method paramSquareTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramSquareTest -->
        <test-method signature="cubeTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="cubeTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cubeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="beforeClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdvancedTests.squareRootTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdvancedTests.cubeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="paramCubeTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="paramCubeTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'singleNumber' is required by @Test on method paramCubeTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'singleNumber' is required by @Test on method paramCubeTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramCubeTest -->
        <test-method signature="paramSquareRootTest(java.lang.String)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="paramSquareRootTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'singleNumber' is required by @Test on method paramSquareRootTest but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'singleNumber' is required by @Test on method paramSquareRootTest but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:660)
at org.testng.internal.Parameters.handleParameters(Parameters.java:856)
at org.testng.internal.Parameters.handleParameters(Parameters.java:704)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:70)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:49)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:904)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paramSquareRootTest -->
        <test-method signature="squareRootTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="squareRootTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squareRootTest -->
        <test-method signature="squareTest()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="squareTest" finished-at="2024-03-08T02:03:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squareTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="beforeMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdvancedTests.squareTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="afterMethod" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.testng.hometasks.AdvancedTests.squareTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.testng.hometasks.AdvancedTests@185a6e9]" started-at="2024-03-08T02:03:58 IST" name="afterClass" finished-at="2024-03-08T02:03:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.testng.hometasks.AdvancedTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
